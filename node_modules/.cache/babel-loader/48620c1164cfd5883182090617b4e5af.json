{"ast":null,"code":"var _jsxFileName = \"/Users/peytonrapo/Desktop/projects/PokemonWorld/src/Login.tsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// Should take in a username & password and then runs that against the DB\n// should update the app with the trainer's info\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onUsernameChange = event => {\n      let newUsername = event.target.value;\n      this.setState({\n        username: newUsername\n      });\n    };\n\n    this.onPasswordChange = event => {\n      let newPassword = event.target.value;\n      this.setState({\n        username: newPassword\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: this.onUsernameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 70\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: this.onPasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 70\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/peytonrapo/Desktop/projects/PokemonWorld/src/Login.tsx"],"names":["React","Component","Login","onUsernameChange","event","newUsername","target","value","setState","username","onPasswordChange","newPassword","render","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAOA;AACA;AACA,MAAMC,KAAN,SAAoBD,SAApB,CAA6C;AAAA;AAAA;;AAAA,SACzCE,gBADyC,GACrBC,KAAD,IAAgB;AAC/B,UAAIC,WAAmB,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAvC;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,QAAQ,EAAEJ;AADA,OAAd;AAGH,KANwC;;AAAA,SAQzCK,gBARyC,GAQtBN,KAAD,IAAgB;AAC9B,UAAIO,WAAmB,GAAGP,KAAK,CAACE,MAAN,CAAaC,KAAvC;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,QAAQ,EAAEE;AADA,OAAd;AAGH,KAbwC;AAAA;;AAezCC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKT;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAEyD;AAAA;AAAA;AAAA;AAAA,cAFzD,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKO;AAAlC;AAAA;AAAA;AAAA;AAAA,cAJJ,eAIyD;AAAA;AAAA;AAAA;AAAA,cAJzD,eAKI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE,KAAKG,KAAL,CAAWJ;AAArC;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AA1BwC;;AA6B7C,eAAeP,KAAf","sourcesContent":["import React, {Component} from 'react';\n\ninterface LoginState {\n    username: string;\n    password: string;\n}\n\n// Should take in a username & password and then runs that against the DB\n// should update the app with the trainer's info\nclass Login extends Component<{},LoginState> {\n    onUsernameChange = (event: any) => {\n        let newUsername: string = event.target.value;\n        this.setState({\n            username: newUsername\n        })\n    };\n\n    onPasswordChange= (event: any) => {\n        let newPassword: string = event.target.value;\n        this.setState({\n            username: newPassword\n        })\n    };\n\n    render() {\n        return (\n            <div>\n                <label>Username:</label>\n                <input type=\"text\" onChange={this.onUsernameChange}/><br/>\n                <label>Password:</label>\n                <input type=\"text\" onChange={this.onPasswordChange}/><br/>\n                <input type=\"text\" value={this.state.username}/>\n                <button>Login</button>\n            </div>\n        )\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}